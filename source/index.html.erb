---
layout: home
---

<div class="header--container">
  <div class="header--details">
    <div class="header--details-text">
      <h1>Liz Abinante</h1>
      <h2 class="subtitle">If I were a cartoon character, I would be me.</h2>
      <h3>Software engineer, feminist, and crafter.</h3>
    </div>
    <div class="header--details-image">
      <img src="/images/header-bw.png" alt="Image of a young woman with short, curly, brown and pink hair.">
    </div>
  </div>

  <div class="header--subheader">
    <ul>
      <li>
        <a href="https://twitter.com/feministy" target="#"><i class="fa fa-twitter fa-lg"></i> Twitter</a>
      </li>
      <li>
        <a href="https://github.com/feministy" target="#"><i class="fa fa-github fa-lg"></i> Github</a>
      </li>
      <li>
        <a href="mailto:me@liz.codes"><i class="fa fa-envelope fa-lg"></i> Email</a>
      </li>
    </ul>
  </div>
</div>

<div class="container">
  <div class="row">
    <div class="columns twelve">
      <h2>Hello!</h2>
      <p>
        I <a href="/writing">write</a> and <a href="/talks">speak</a> about diversity, web development and design, and education. I <a href="http://twitter.com/feministy">tweet</a> (a lot) about development and the tech industry. Learn more <a href="/about">about me</a> or <a href="/contact">get in touch</a>. Below you'll find a list of upcoming talks, as well as my most recent blog posts. 
      </p>

      <p>
        Looking for speakers at your conference? <a href="/speaker-info" class="highlight">Speaking info can be found here</a>.
      </p>

      <div class="upcoming">
        <h2>
          Upcoming talks
        </h2>
        <div class="upcoming--details">
          <h3><a href="http://2016.cascadiafest.org/speakers/liz-abinante/" target="#">In Defense of Static Sites</a></h3>
          <p>
            August 3-5, 2016 in Semiahmoo, WA
          </p>
          <h4><a href="http://2016.cascadiafest.org/" class="highlight" target="#">A Foolish Quest: Creating Knitting Patterns Using JavaScript</a></h4>
          <p>
            The most basic sites don't need servers, and they don't need fancy front end routing. And yet... how did we get here, and why are we so afraid to go back to the basics? Who are we actually building these sites for and who are we harming by front loading so many build tools, complex frameworks, and overblown architecture? Hint: it's not just us, it's out users, too. Static sites serve a purpose, and they're really important pieces of the web's history and its future. Static doesn't mean forever unchanged and it doesn't mean you're stuck with a dead site that you can never update. Quite frankly, static sites have gotten a bad reputation and it's not their fault: we've all been so distracted by shiny new things to remember their virtues. I'll revisit what it means to build a static site, what the use cases are, how you know its the right technical choice, what tools to use, and when to scale up to something more complex.
          </p>
        </div>
      </div>

      <div class="latest">
        <h2>
          Latest
        </h2>
        <% most_recent(blog.articles, "blog", 3).each do |article| %>
          <div class="latest--details">
            <h3><%= formatted_article_tags(article.tags) %></h3>
            <p>
              <%= article.date.strftime('%B %d, %Y') %>
            </p>
            <h4>
              <%= link_to article.title, article, class: 'highlight' %>
            </h4>
            <%= article.summary %>
          </div>
        <% end %> 
      </div> 
    </div>
  </div>
</div>

