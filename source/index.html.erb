---
layout: home
---

<div class="header--container">
  <div class="header--details">
    <div class="header--details-text">
      <h1>Liz Abinante</h1>
      <h2 class="subtitle">If I were a cartoon character, I would be me.</h2>
      <h3>Software engineer, feminist, and crafter.</h3>
    </div>
    <div class="header--details-image">
      <img src="/images/header-bw.png" alt="Image of a young woman with short, curly, brown and pink hair.">
    </div>
  </div>

  <div class="header--subheader">
    <ul>
      <li>
        <a href="https://twitter.com/feministy" target="#"><i class="fa fa-twitter fa-lg"></i> Twitter</a>
      </li>
      <li>
        <a href="https://github.com/feministy" target="#"><i class="fa fa-github fa-lg"></i> Github</a>
      </li>
      <li>
        <a href="mailto:me@liz.codes"><i class="fa fa-envelope fa-lg"></i> Email</a>
      </li>
    </ul>
  </div>
</div>

<div class="container">
  <div class="row">
    <div class="columns twelve">
      <h2>Hello!</h2>
      <p>
        I <a href="/writing">write</a> and <a href="/talks">speak</a> about diversity, web development and design, and education. I <a href="http://twitter.com/feministy">tweet</a> (a lot) about development and the tech industry. Learn more <a href="/about">about me</a> or <a href="/contact">get in touch</a>. Below you'll find a list of upcoming talks, as well as my most recent blog posts. 
      </p>

      <p>
        Looking for speakers at your conference? <a href="/speaker-info" class="highlight">Speaking info can be found here</a>.
      </p>

      <div class="upcoming">
        <h2>
          Upcoming talks
        </h2>
        <div class="upcoming--details">
          <h3><a href="http://www.writespeakcode.com/" target="#">write.speak.code</a></h3>
          <p>
            June 15-18, 2016 in Chicago, IL
          </p>
          <h4><a href="http://www.writespeakcode.com/" class="highlight" target="#">Creating Your First Ruby Gem</a></h4>
          <p>
            Thanks to some lovely people in the Ruby and Bundler communities, creating your first Ruby gem is a lot more approachable than it used to be. Even with this helpful documentation, creating your first gem can be daunting: what are all of these files, and why are they organized this way? How do you test a gem? What are some basic best practices? During this talk, I'll walk you through creating a small Ruby gem and publishing it for others to use.
          </p>

          <h3><a href="http://nodepdx.org/" target="#">Node PDX</a></h3>
          <p>
            June 20-21, 2016 in Portland, OR
          </p>
          <h4><a href="http://nodepdx.org/" class="highlight" target="#">A Foolish Quest: Creating Knitting Patterns Using JavaScript</a></h4>
          <p>
            Taking something real-world and math-based, like knitting, and turning into a program is actually super easy (no one is surprised here). But! What happens when you combine that with best practices and expected conventions, along with industry-wide standards for design and presentation? Things get a lot more complicated than just crunching numbers, especially when your output will result in lots of manual hours creating a real object. This is the story of how I built a customizable knitting pattern generator in JavaScript (after I built it in Ruby first, of course), and the lessons learned when you try and do math for more than just math's sake.
          </p>
        </div>
      </div>

      <div class="latest">
        <h2>
          Latest
        </h2>
        <% most_recent(blog.articles, "blog", 3).each do |article| %>
          <div class="latest--details">
            <h3><%= formatted_article_tags(article.tags) %></h3>
            <p>
              <%= article.date.strftime('%B %d, %Y') %>
            </p>
            <h4>
              <%= link_to article.title, article, class: 'highlight' %>
            </h4>
            <%= article.summary %>
          </div>
        <% end %> 
      </div> 
    </div>
  </div>
</div>

